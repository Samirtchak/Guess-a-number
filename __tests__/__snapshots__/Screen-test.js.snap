// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Screen tests  GameOverScreen render correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Text>
    Game Over
  </Text>
  <View
    style={
      Object {
        "borderColor": "black",
        "borderRadius": 200,
        "borderWidth": 3,
        "height": 300,
        "marginVertical": 30,
        "overflow": "hidden",
        "width": "80%",
      }
    }
  >
    <Image
      resizeMode="cover"
      source={
        Object {
          "testUri": "../../../assets/original.png",
        }
      }
      style={
        Object {
          "height": 300,
          "width": "100%",
        }
      }
    />
  </View>
  <Text>
    Number of rounds: 
  </Text>
  <Text>
    Number was: 
  </Text>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Restart
      </Text>
    </View>
  </View>
</View>
`;

exports[`Screen tests  GameScreen render correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "fontSize": 20,
        "fontWeight": "bold",
      }
    }
  >
    Computer guess number
  </Text>
  <Text
    style={
      Object {
        "color": "red",
        "fontSize": 40,
        "fontWeight": "bold",
        "paddingTop": 10,
      }
    }
  >
    58
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderRadius": 10,
        "elevation": 8,
        "flexDirection": "row",
        "justifyContent": "space-around",
        "marginVertical": 10,
        "maxWidth": "80%",
        "padding": 20,
        "shadowColor": "black",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.26,
        "shadowRadius": 6,
        "width": 300,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityStates={Array []}
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          LOWER
        </Text>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityStates={Array []}
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          GREATER
        </Text>
      </View>
    </View>
  </View>
  <Text>
    Current Guesses:
  </Text>
  <RCTScrollView>
    <View>
      <View>
        <Text>
          58
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Screen tests  GameStartScreen render correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <Text
    style={
      Object {
        "fontSize": 20,
        "fontWeight": "bold",
        "marginVertical": 10,
      }
    }
  >
    Start a New Game!
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderRadius": 10,
        "elevation": 8,
        "maxWidth": "80%",
        "padding": 20,
        "shadowColor": "black",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.26,
        "shadowRadius": 6,
        "width": 300,
      }
    }
  >
    <Text>
      Select a Number
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      blurOnSubmit={true}
      keyboardType="numeric"
      maxLength={2}
      onChangeText={[Function]}
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomColor": "grey",
          "borderBottomWidth": 1,
          "height": 30,
          "marginVertical": 10,
          "textAlign": "center",
          "width": 50,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "80%",
        }
      }
    >
      <View
        style={
          Object {
            "width": 100,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "firebrick",
                  },
                ]
              }
            >
              Reset
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "width": 100,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "dodgerblue",
                  },
                ]
              }
            >
              Start
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
